{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\augus\\\\Documents\\\\Programming\\\\Practice\\\\C#\\\\EcommerceFront\\\\ecommerce\\\\src\\\\Components\\\\Review.jsx\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Reviews extends Component {\n  constructor(props) {\n    super(props);\n\n    this.renderGetData = async () => {\n      try {\n        let response = await axios.get(`https://localhost:44394/api/review/${this.props.productId}`);\n        console.log(response);\n        this.setState({\n          reviews: response.data\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.state = {\n      reviews: []\n    };\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  async PostReviewData() {\n    const currentReview = {\n      reviews: this.state.reviews\n    };\n    await axios.post(`https://localhost:44394/api/review`, {\n      currentReview\n    }).then(response => this.setState({\n      reviews: [...this.state.reviews, response.data]\n    }).catch(error => {\n      console.log(error);\n    }));\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.PostReviewData.bind(this);\n  }\n\n  componentDidMount() {\n    this.renderGetData();\n  }\n\n  render() {\n    const reviewData = this.state.reviews;\n    const mapData = reviewData.map((review, i) => /*#__PURE__*/_jsxDEV(\"td\", {\n      children: review.Comment\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 56\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Reviews\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit.bind(this),\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"reviews\",\n          onChange: this.handleChange.bind(this),\n          placeholder: \"Enter Review\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Submit reviews\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: mapData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Reviews;","map":{"version":3,"sources":["C:/Users/augus/Documents/Programming/Practice/C#/EcommerceFront/ecommerce/src/Components/Review.jsx"],"names":["React","Component","axios","Reviews","constructor","props","renderGetData","response","get","productId","console","log","setState","reviews","data","err","state","handleChange","event","target","name","value","PostReviewData","currentReview","post","then","catch","error","handleSubmit","preventDefault","bind","componentDidMount","render","reviewData","mapData","map","review","i","Comment"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nclass Reviews extends Component {\r\n    constructor(props) {\r\n        super(props); \r\n        this.state = {\r\n            reviews: [],\r\n        }\r\n     }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n\r\n    \r\n    async PostReviewData() {\r\n        const currentReview = {reviews: this.state.reviews};\r\n        await axios.post(`https://localhost:44394/api/review`, { currentReview })\r\n        .then(response => this.setState({\r\n            reviews: [...this.state.reviews, response.data]\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        }))\r\n        \r\n    }\r\n\r\n    renderGetData = async() => {\r\n        try {\r\n            let response = await axios.get(`https://localhost:44394/api/review/${this.props.productId}`)\r\n            console.log(response)\r\n            this.setState({reviews: response.data});\r\n        } catch (err) {\r\n            console.log(err);\r\n        } \r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault()\r\n        this.PostReviewData.bind(this)\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.renderGetData()\r\n    }\r\n\r\n    render() { \r\n        const reviewData = this.state.reviews\r\n        \r\n        const mapData = reviewData.map((review, i) => (<td key={i}>{review.Comment}</td>));\r\n        return ( \r\n            <div>\r\n                <h1>Reviews</h1>\r\n                <form onSubmit={this.handleSubmit.bind(this)}>\r\n                    <input type='text' name='reviews' onChange={this.handleChange.bind(this)} placeholder='Enter Review' />\r\n                    <input type='submit' value='Submit reviews' />\r\n                </form>\r\n                <table>\r\n                    <tbody>\r\n                <tr>\r\n                    {mapData}\r\n                </tr>\r\n                </tbody>\r\n                </table>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Reviews;"]},"metadata":{},"sourceType":"module"}